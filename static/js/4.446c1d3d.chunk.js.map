{"version":3,"sources":["api/axiosClient.js","components/Footer/index.jsx","api/moivieApi.js","features/MovieList/Page/Film/index.jsx","assets/videos/Ghibli.mp4","components/Intro/index.js","features/MovieInfo/index.jsx","features/MovieList/Page/Main/index.js","features/MovieList/index.js"],"names":["axiosClient","axios","create","baseURL","process","headers","paramsSerializer","params","queryString","stringify","interceptors","response","use","data","error","Footer","props","className","movieApi","getAll","get","getFilm","id","url","getAllPeople","Film","useParams","useState","film","setFilm","useEffect","fetchFilm","a","console","log","movie_banner","description","director","image","title","original_title","original_title_romanised","producer","release_date","rt_score","running_time","style","backgroundImage","isCounting","end","Number","duration","src","alt","Intro","options","strings","autoStart","loop","pauseFor","video","muted","autoPlay","MovieInfo","to","defautlProps","MainPage","filmList","map","MovieList","setFilmList","count","setCount","hasMore","sethasMore","fetchProductList","limit","path","element","dataLength","length","next","loader","role","endMessage","Main","NotFound"],"mappings":"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","file":"static/js/4.446c1d3d.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport queryString from 'query-string';\r\n\r\n// Set up default config for http requests here\r\n// Please have a look at here `https://github.com/axios/axios#request- config` for the full list of configs\r\nconst axiosClient = axios.create({\r\n    baseURL: process.env.REACT_APP_API_URL,\r\n    headers: {\r\n        'content-type': 'application/json',\r\n    },\r\n    paramsSerializer: params => queryString.stringify(params),\r\n});\r\n\r\n// axiosClient.interceptors.request.use(async (config) => {\r\n//     // Handle token here ...\r\n//     return config;\r\n// });\r\n\r\naxiosClient.interceptors.response.use((response) => {\r\n    if (response && response.data) {\r\n        return response.data;\r\n    }\r\n\r\n    return response;\r\n}, (error) => {\r\n    // Handle errors\r\n    throw error;\r\n});\r\n\r\nexport default axiosClient;","import React from 'react';\r\n\r\n\r\nconst Footer = props => {\r\n    return (\r\n        <div>\r\n            <footer className=\"footer mt-4\">\r\n\r\n                <div >TDT University</div>\r\n\r\n            </footer>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Footer;","import axiosClient from \"./axiosClient\";\r\n\r\nconst movieApi = {\r\n    getAll: (params) => {\r\n        const url = '/films';\r\n        return axiosClient.get(url, { params });\r\n    },\r\n\r\n    getFilm: (id) => {\r\n        const url = `/films/${id}`;\r\n        return axiosClient.get(url);\r\n    },\r\n\r\n    getAllPeople: (params) => {\r\n        const url = '/people';\r\n        return axiosClient.get(url, { params });\r\n    },\r\n}\r\n\r\nexport default movieApi;","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.scss'\r\nimport { useParams } from 'react-router-dom';\r\nimport movieApi from 'api/moivieApi';\r\nimport { CountUp } from 'use-count-up';\r\n\r\nconst Film = props => {\r\n    let params = useParams();\r\n    const [film, setFilm] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchFilm = async () => {\r\n            try {\r\n                const id = params.id;\r\n                const response = await movieApi.getFilm(id);\r\n                setFilm(response);\r\n\r\n            } catch (error) {\r\n                console.log('Failed to fetch product list: ', error);\r\n            }\r\n        }\r\n        fetchFilm();\r\n    }, []);// eslint-disable-line react-hooks/exhaustive-deps\r\n    const { id, movie_banner, description, director, image, title, original_title, original_title_romanised,\r\n        producer, release_date, rt_score, running_time } = film;\r\n    console.log(film)\r\n    return (\r\n        <div style={{\r\n            backgroundImage: `linear-gradient(to right, rgb(15 32 39 / 35%), rgb(32 58 67 / 35%), rgb(44 83 100 / 35%)), url(${movie_banner})`\r\n        }} className='film'>\r\n            <div className='overlay'> </div>\r\n            <div className='container'>\r\n\r\n                <div className='row'>\r\n                    <div className='col-md-6 d-flex justify-content-center'>\r\n                        <div className='film--left'>\r\n                            <div className='film--left__score'> <CountUp isCounting end={Number(rt_score)} duration={7} />  </div>\r\n                            <img className='film--left__image' src={image} alt='Film Img' />\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div key={id} className='col-md-6 d-flex flex-column justify-content-start'>\r\n                        <div className='overlay2'> </div>\r\n                        <h2 className='film--title'> {title} ({release_date}) </h2>\r\n                        <h3 className='film--title__romanised'> {original_title_romanised}</h3>\r\n                        <h3 className='film--title__original'> {original_title}</h3>\r\n                        <div><span className='font-weight-bold'>Amount of time</span> : {running_time} minute</div>\r\n                        <div><span className='font-weight-bold'>Director</span> : {director}</div>\r\n                        <div><span className='font-weight-bold'>Producer</span> : {producer}</div>\r\n                        <span>{description}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nFilm.propTypes = {\r\n\r\n};\r\n\r\nexport default Film;","export default __webpack_public_path__ + \"static/media/Ghibli.3c87d25d.mp4\";","import React from 'react';\r\nimport './style.scss'\r\nimport video from '../../assets/videos/Ghibli.mp4'\r\nimport Typewriter from 'typewriter-effect';\r\nconst Intro = props => {\r\n\r\n    return (\r\n        <div className=\"intro\">\r\n\r\n            <div className=\"welcome-text\">\r\n\r\n                <Typewriter\r\n                    options={{\r\n                        strings: ['Welcome To Ghibli Studio', 'See Thousand Of Infor Here '],\r\n                        autoStart: true,\r\n                        loop: true,\r\n                        pauseFor: 2500,\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n            <video className=\"intro--video\"\r\n                src={video}\r\n                muted\r\n                autoPlay={\"autoplay\"}\r\n                loop\r\n            > </video>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Intro;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.scss'\r\nimport { CountUp } from 'use-count-up'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst MovieInfo = props => {\r\n    const { id, title, image, description, rt_score } = props\r\n    return (\r\n        <div className=\"movie card\" >\r\n            <img className=\"card-img-top\" src={image} alt=\"Ghibli Movie Sumary Information\" />\r\n            <div className=\"card-body\">\r\n                <Link to={id}>\r\n                    <h5 className=\"card-title\">{title}\r\n                        <div className='movie--score'>\r\n                            <CountUp isCounting end={Number(rt_score)} duration={7} />\r\n                        </div>\r\n                    </h5>\r\n                </Link>\r\n                <p className=\"movie--description card-text\">{description}    </p>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nMovieInfo.propTypes = {\r\n    id: PropTypes.string,\r\n    title: PropTypes.string,\r\n    image: PropTypes.string,\r\n    description: PropTypes.string,\r\n    rt_score: PropTypes.string\r\n};\r\n\r\nMovieInfo.defautlProps = {\r\n    id: \"\",\r\n    title: \"\",\r\n    image: \"\",\r\n    description: \"\",\r\n    rt_score: \"\"\r\n};\r\n\r\nexport default MovieInfo;","import PropTypes from 'prop-types';\r\nimport Intro from 'components/Intro';\r\nimport MovieInfo from 'features/MovieInfo';\r\n\r\n\r\nconst MainPage = props => {\r\n\r\n    MainPage.propTypes = {\r\n        filmList: PropTypes.array,\r\n    };\r\n\r\n    MainPage.defautlProps = {\r\n        filmList: [],\r\n\r\n    };\r\n    const { filmList } = props\r\n\r\n    return (\r\n\r\n        <div>\r\n            <Intro></Intro>\r\n            <h3 className=\"mt-5 text-center\">ALL FILMS</h3>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    {\r\n                        filmList.map((film) => (\r\n\r\n                            <div key={film.id} className=\"col-12 col-sm-6  col-md-4 col-xl-4  mt-5\" >\r\n                                <MovieInfo id={film.id} title={film.title} image={film.image}\r\n                                    release_date={film.release_date} description={film.description} rt_score={film.rt_score}\r\n                                />\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div> </div>\r\n        </div >\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default MainPage;","import React, { useEffect, useState } from 'react';\r\nimport Film from './Page/Film';\r\nimport MainPage from './Page/Main';\r\nimport NotFound from 'components/NotFound';\r\nimport { Route, Routes } from 'react-router';\r\nimport movieApi from 'api/moivieApi';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport Footer from 'components/Footer';\r\n\r\nconst MovieList = props => {\r\n    const [filmList, setFilmList] = useState([]);\r\n    const [count, setCount] = useState(3);\r\n    const [hasMore, sethasMore] = useState(true);\r\n    useEffect(() => {\r\n        fetchProductList();\r\n    }, []);\r\n\r\n    const fetchProductList = async () => {\r\n        try {\r\n            const params = {\r\n                limit: count,\r\n            };\r\n            const response = await movieApi.getAll(params);\r\n            //console.log(response);\r\n            setFilmList(response);\r\n            if (count >= 21) {\r\n                sethasMore(false);\r\n            }\r\n            setCount(count + 2)\r\n        } catch (error) {\r\n            console.log('Failed to fetch product list: ', error);\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <Routes>\r\n                <Route path=\"/\" element={\r\n\r\n                    <InfiniteScroll dataLength={filmList.length}\r\n\r\n                        next={fetchProductList}\r\n                        hasMore={hasMore}\r\n                        loader={\r\n                            <div className=\"text-center mt-3\">\r\n                                <div className=\"spinner-grow text-warning\" role=\"status\">\r\n                                    <span className=\"sr-only\">Loading...</span>\r\n                                </div>\r\n                                <div className=\"spinner-grow text-warning\" role=\"status\">\r\n                                    <span className=\"sr-only\">Loading...</span>\r\n                                </div>\r\n                                <div className=\"spinner-grow text-warning\" role=\"status\">\r\n                                    <span className=\"sr-only\">Loading...</span>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        endMessage={\r\n                            <Footer />\r\n                        }\r\n                    >\r\n                        <MainPage filmList={filmList} />\r\n                    </InfiniteScroll>\r\n                }\r\n                />\r\n                <Route path=\":id\" element={<Film />} />\r\n                {/* <Route path=\":photoId\" element={< AddEditPage />} /> */}\r\n                <Route path=\"*\" element={<NotFound />} />\r\n            </Routes>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default MovieList;"],"sourceRoot":""}